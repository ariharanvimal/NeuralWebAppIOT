{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MqttDashboardComponent = class MqttDashboardComponent {\n  constructor(mqttService) {\n    this.mqttService = mqttService;\n    this.title = 'NeuralIOT';\n    this.mqttService.connect();\n  }\n  ngOnInit() {\n    this.mqttService.observe('env').subscribe(message => {\n      const payloadString = message.payload.toString(); // Assuming UTF-8 encoding\n      const payloadObject = JSON.parse(payloadString);\n      console.log(`Received message on topic ${message.topic}:`, payloadObject);\n      // Perform actions based on the received message\n      this.handleMessage(payloadObject);\n    });\n  }\n  handleMessage(message) {\n    this.msg = message;\n    console.log('Handling message:', message);\n    // Perform your specific actions here\n  }\n};\n\nMqttDashboardComponent = __decorate([Component({\n  selector: 'app-mqtt-dashboard',\n  templateUrl: './mqtt-dashboard.component.html',\n  styleUrls: ['./mqtt-dashboard.component.css']\n})], MqttDashboardComponent);\nexport { MqttDashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAGjCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAc/B,UAAK,GAAG,WAAW;IAbjB,IAAI,CAACA,WAAW,CAACC,OAAO,EAAE;EAC5B;EACAC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,OAAO,CAAC,KAAK,CAAC,CAACC,SAAS,CAAEC,OAAqB,IAAI;MAClE,MAAMC,aAAa,GAAGD,OAAO,CAACE,OAAO,CAACC,QAAQ,EAAE,CAAC,CAAC;MAClD,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;MAE/CM,OAAO,CAACC,GAAG,CAAC,6BAA6BR,OAAO,CAACS,KAAK,GAAG,EAAEL,aAAa,CAAC;MAEzE;MACA,IAAI,CAACM,aAAa,CAACN,aAAa,CAAC;IACnC,CAAC,CAAC;EACJ;EAEAM,aAAa,CAACV,OAAe;IAC3B,IAAI,CAACW,GAAG,GAAGX,OAAO;IAClBO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,OAAO,CAAC;IACzC;EACF;CACD;;AAvBYP,sBAAsB,eALlCD,SAAS,CAAC;EACToB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWrB,sBAAsB,CAuBlC;SAvBYA,sBAAsB","names":["Component","MqttDashboardComponent","constructor","mqttService","connect","ngOnInit","observe","subscribe","message","payloadString","payload","toString","payloadObject","JSON","parse","console","log","topic","handleMessage","msg","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ariharan\\Desktop\\NeuralWebAppIOT\\WebIOTApplication\\UI\\NeuralIOT\\src\\app\\Components\\mqtt-dashboard\\mqtt-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MqttService, IMqttMessage } from 'ngx-mqtt';\n\n@Component({\n  selector: 'app-mqtt-dashboard',\n  templateUrl: './mqtt-dashboard.component.html',\n  styleUrls: ['./mqtt-dashboard.component.css'],\n})\nexport class MqttDashboardComponent implements OnInit {\n  client!: any;\n  msg: any;\n  constructor(private mqttService: MqttService) {\n    this.mqttService.connect();\n  }\n  ngOnInit(): void {\n    this.mqttService.observe('env').subscribe((message: IMqttMessage) => {\n      const payloadString = message.payload.toString(); // Assuming UTF-8 encoding\n      const payloadObject = JSON.parse(payloadString);\n\n      console.log(`Received message on topic ${message.topic}:`, payloadObject);\n\n      // Perform actions based on the received message\n      this.handleMessage(payloadObject);\n    });\n  }\n  title = 'NeuralIOT';\n  handleMessage(message: string): void {\n    this.msg = message;\n    console.log('Handling message:', message);\n    // Perform your specific actions here\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}